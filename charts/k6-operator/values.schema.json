{
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": true,
      "description": "affinity -- Affinity to be applied on all containers",
      "title": "affinity",
      "type": "object"
    },
    "authProxy": {
      "additionalProperties": false,
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "authProxy.containerSecurityContext -- A security context defines privileges and access control settings for the container.",
          "title": "containerSecurityContext",
          "type": "object"
        },
        "enabled": {
          "default": true,
          "description": "authProxy.enabled -- enables the protection of /metrics endpoint. (https://github.com/brancz/kube-rbac-proxy)",
          "title": "enabled",
          "type": "boolean"
        },
        "image": {
          "additionalProperties": false,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "authProxy.image.pullPolicy -- pull policy for the image can be Always, Never, IfNotPresent (default: IfNotPresent)",
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "gcr.io",
              "description": "authProxy.image.registry",
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "kubebuilder/kube-rbac-proxy",
              "description": "authProxy.image.repository -- rbac-proxy image repository",
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "v0.15.0",
              "description": "authProxy.image.tag -- rbac-proxy image tag",
              "title": "tag",
              "type": "string"
            }
          },
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "authProxy.livenessProbe -- Liveness probe in Probe format",
          "title": "livenessProbe",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "authProxy.readinessProbe -- Readiness probe in Probe format",
          "title": "readinessProbe",
          "type": "object"
        },
        "resources": {
          "additionalProperties": true,
          "description": "authProxy.resources -- rbac-proxy resource limitation/request",
          "title": "resources",
          "type": "object"
        }
      },
      "title": "authProxy",
      "type": "object"
    },
    "customAnnotations": {
      "additionalProperties": true,
      "description": "customAnnotations -- Custom Annotations to be applied on all resources",
      "title": "customAnnotations",
      "type": "object"
    },
    "customLabels": {
      "additionalProperties": true,
      "description": "customLabels -- Custom Label to be applied on all resources",
      "title": "customLabels",
      "type": "object"
    },
    "global": {
      "additionalProperties": false,
      "properties": {
        "image": {
          "additionalProperties": false,
          "properties": {
            "pullSecrets": {
              "items": {},
              "description": "global.image.pullSecrets -- Optional set of global image pull secrets",
              "title": "pullSecrets",
              "type": "array"
            },
            "registry": {
              "default": "",
              "description": "global.image.registry -- Global image registry to use if it needs to be overridden for some specific use cases (e.g local registries, custom images, ...)",
              "title": "registry",
              "type": "string"
            }
          },
          "description": "global.image -- Global image configuration",
          "title": "image",
          "type": "object"
        }
      },
      "title": "global",
      "type": "object"
    },
    "installCRDs": {
      "default": true,
      "description": "installCRDs -- Installs CRDs as part of the release",
      "title": "installCRDs",
      "type": "boolean"
    },
    "manager": {
      "additionalProperties": false,
      "properties": {
        "containerSecurityContext": {
          "additionalProperties": true,
          "description": "manager.containerSecurityContext -- A security context defines privileges and access control settings for the container.",
          "title": "containerSecurityContext",
          "type": "object"
        },
        "env": {
          "items": {},
          "description": "manager.env -- List of environment variables to set in the controller",
          "title": "env",
          "type": "array"
        },
        "envFrom": {
          "items": {},
          "description": "manager.envFrom -- List of sources to populate environment variables in the controller",
          "title": "envFrom",
          "type": "array"
        },
        "image": {
          "additionalProperties": false,
          "properties": {
            "pullPolicy": {
              "default": "IfNotPresent",
              "description": "manager.image.pullPolicy -- pull policy for the image possible values Always, Never, IfNotPresent (default: IfNotPresent)",
              "title": "pullPolicy",
              "type": "string"
            },
            "registry": {
              "default": "ghcr.io",
              "description": "manager.image.registry",
              "title": "registry",
              "type": "string"
            },
            "repository": {
              "default": "grafana/k6-operator",
              "description": "manager.image.repository -- controller-manager image repository",
              "title": "repository",
              "type": "string"
            },
            "tag": {
              "default": "controller-v0.0.18",
              "description": "manager.image.tag -- controller-manager image tag",
              "title": "tag",
              "type": "string"
            }
          },
          "description": "manager.image -- controller-manager image configuration",
          "title": "image",
          "type": "object"
        },
        "livenessProbe": {
          "additionalProperties": true,
          "description": "manager.livenessProbe -- Liveness probe in Probe format",
          "title": "livenessProbe",
          "type": "object"
        },
        "podSecurityContext": {
          "additionalProperties": true,
          "description": "manager.podSecurityContext -- A security context defines privileges and access control settings for a pod.",
          "title": "podSecurityContext",
          "type": "object"
        },
        "readinessProbe": {
          "additionalProperties": true,
          "description": "manager.readinessProbe -- Readiness probe in Probe format",
          "title": "readinessProbe",
          "type": "object"
        },
        "replicas": {
          "default": 1,
          "description": "manager.replicas -- number of controller-manager replicas (default: 1)",
          "title": "replicas",
          "type": "integer"
        },
        "resources": {
          "additionalProperties": false,
          "properties": {
            "limits": {
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "description": "manager.resources.limits.cpu -- controller-manager CPU limit (Max)",
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "100Mi",
                  "description": "manager.resources.limits.memory -- controller-manager Memory limit (Max)",
                  "title": "memory",
                  "type": "string"
                }
              },
              "description": "manager.resources.limits -- controller-manager Resources limits",
              "title": "limits",
              "type": "object"
            },
            "requests": {
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "default": "100m",
                  "description": "manager.resources.requests.cpu -- controller-manager CPU request (Min)",
                  "title": "cpu",
                  "type": "string"
                },
                "memory": {
                  "default": "50Mi",
                  "description": "manager.resources.requests.memory -- controller-manager Memory request (Min)",
                  "title": "memory",
                  "type": "string"
                }
              },
              "description": "manager.resources.requests -- controller-manager Resources requests",
              "title": "requests",
              "type": "object"
            }
          },
          "description": "manager.resources -- controller-manager Resources definition",
          "title": "resources",
          "type": "object"
        },
        "serviceAccount": {
          "additionalProperties": false,
          "properties": {
            "create": {
              "default": true,
              "description": "manager.serviceAccount.create -- create the service account (default: true)",
              "title": "create",
              "type": "boolean"
            },
            "name": {
              "default": "k6-operator-controller",
              "description": "manager.serviceAccount.name -- kubernetes service account for the k6 manager",
              "title": "name",
              "type": "string"
            }
          },
          "title": "serviceAccount",
          "type": "object"
        }
      },
      "description": "manager -- controller-manager configuration",
      "title": "manager",
      "type": "object"
    },
    "namespace": {
      "additionalProperties": false,
      "properties": {
        "create": {
          "default": true,
          "description": "namespace.create -- create the namespace (default: true)",
          "title": "create",
          "type": "boolean"
        }
      },
      "description": "namespace -- Namespace creation",
      "title": "namespace",
      "type": "object"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "nodeSelector -- Node Selector to be applied on all containers",
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "podAnnotations -- Custom Annotations to be applied on all pods",
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "additionalProperties": true,
      "description": "podLabels -- Custom Label to be applied on all pods",
      "title": "podLabels",
      "type": "object"
    },
    "prometheus": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "description": "prometheus.enabled -- enables the prometheus metrics scraping (default: false)",
          "title": "enabled",
          "type": "boolean"
        }
      },
      "title": "prometheus",
      "type": "object"
    },
    "tolerations": {
      "additionalProperties": true,
      "items": {},
      "description": "tolerations -- Tolerations to be applied on all containers",
      "title": "tolerations",
      "type": "array"
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object"
}