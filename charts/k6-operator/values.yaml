# @schema
# required: false
# type: object
# @schema
global:
  # @schema
  # required: false
  # type: object
  # @schema
  # global.image -- Global image configuration
  image:
    # @schema
    # required: false
    # type: string
    # @schema
    # global.image.registry -- Global image registry to use if it needs to be overridden for some specific use cases (e.g local registries, custom images, ...)
    registry: ""

    # @schema
    # required: false
    # type: array
    # @schema
    # global.image.pullSecrets -- Optional set of global image pull secrets
    pullSecrets: []

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# customAnnotations -- Custom Annotations to be applied on all resources
customAnnotations: {}

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# podAnnotations -- Custom Annotations to be applied on all pods
podAnnotations: {}

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# customLabels -- Custom Label to be applied on all resources
customLabels: {}

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# podLabels -- Custom Label to be applied on all pods
podLabels: {}

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# nodeSelector -- Node Selector to be applied on all containers
nodeSelector: {}

# @schema
# additionalProperties: true
# required: false
# type: object
# @schema
# affinity -- Affinity to be applied on all containers
affinity: {}

# @schema
# additionalProperties: true
# required: false
# type: array
# @schema
# tolerations -- Tolerations to be applied on all containers
tolerations: []

# @schema
# required: false
# type: boolean
# @schema
# installCRDs -- Installs CRDs as part of the release
installCRDs: true

# @schema
# required: false
# type: object
# @schema
# namespace -- Namespace creation
namespace:
  # @schema
  # required: false
  # type: boolean
  # @schema
  # namespace.create -- create the namespace (default: true)
  create: true

# @schema
# required: false
# type: object
# @schema
prometheus:
  # @schema
  # required: false
  # type: boolean
  # @schema
  # prometheus.enabled -- enables the prometheus metrics scraping (default: false)
  enabled: false

# @schema
# required: false
# type: object
# @schema
authProxy:
  # @schema
  # required: false
  # type: boolean
  # @schema
  # authProxy.enabled -- enables the protection of /metrics endpoint. (https://github.com/brancz/kube-rbac-proxy)
  enabled: true
  # @schema
  # required: false
  # type: object
  # @schema
  image:
    # @schema
    # required: false
    # type: string
    # @schema
    # authProxy.image.registry
    registry: gcr.io
    # @schema
    # required: false
    # type: string
    # @schema
    # authProxy.image.repository -- rbac-proxy image repository
    repository: kubebuilder/kube-rbac-proxy
    # @schema
    # required: false
    # type: string
    # @schema
    # authProxy.image.tag -- rbac-proxy image tag
    tag: v0.15.0
    # @schema
    # required: false
    # type: string
    # @schema
    # authProxy.image.pullPolicy -- pull policy for the image can be Always, Never, IfNotPresent (default: IfNotPresent)
    pullPolicy: IfNotPresent

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # authProxy.resources -- rbac-proxy resource limitation/request
  resources: {}

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # authProxy.livenessProbe -- Liveness probe in Probe format
  livenessProbe: {}

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # authProxy.readinessProbe -- Readiness probe in Probe format
  readinessProbe: {}

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # authProxy.containerSecurityContext -- A security context defines privileges and access control settings for the container.
  containerSecurityContext: {}

# @schema
# required: false
# type: object
# @schema
# manager -- controller-manager configuration
manager:
  # @schema
  # required: false
  # type: integer
  # @schema
  # manager.replicas -- number of controller-manager replicas (default: 1)
  replicas: 1
  # @schema
  # required: false
  # type: object
  # @schema
  serviceAccount:
    # @schema
    # required: false
    # type: string
    # @schema
    # manager.serviceAccount.name -- kubernetes service account for the k6 manager
    name: k6-operator-controller
    # @schema
    # required: false
    # type: boolean
    # @schema
    # manager.serviceAccount.create -- create the service account (default: true)
    create: true
  # @schema
  # required: false
  # type: object
  # @schema
  # manager.image -- controller-manager image configuration
  image:
    # @schema
    # required: false
    # type: string
    # @schema
    # manager.image.registry
    registry: ghcr.io
    # @schema
    # required: false
    # type: string
    # @schema
    # manager.image.repository -- controller-manager image repository
    repository: grafana/k6-operator
    # @schema
    # required: false
    # type: string
    # @schema
    # manager.image.tag -- controller-manager image tag
    tag: controller-v0.0.18
    # @schema
    # required: false
    # type: string
    # @schema
    # manager.image.pullPolicy -- pull policy for the image possible values Always, Never, IfNotPresent (default: IfNotPresent)
    pullPolicy: IfNotPresent

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # manager.livenessProbe -- Liveness probe in Probe format
  livenessProbe: {}

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # manager.readinessProbe -- Readiness probe in Probe format
  readinessProbe: {}

  # @schema
  # required: false
  # type: array
  # @schema
  # manager.env -- List of environment variables to set in the controller
  env: []

  # @schema
  # required: false
  # type: array
  # @schema
  # manager.envFrom -- List of sources to populate environment variables in the controller
  envFrom: []

  # @schema
  # required: false
  # type: object
  # @schema
  # manager.resources -- controller-manager Resources definition
  resources:
    # @schema
    # required: false
    # type: object
    # @schema
    # manager.resources.limits -- controller-manager Resources limits
    limits:
      # @schema
      # required: false
      # type: string
      # @schema
      # manager.resources.limits.cpu -- controller-manager CPU limit (Max)
      cpu: 100m
      # @schema
      # required: false
      # type: string
      # @schema
      # manager.resources.limits.memory -- controller-manager Memory limit (Max)
      memory: 100Mi
    # @schema
    # required: false
    # type: object
    # @schema
    # manager.resources.requests -- controller-manager Resources requests
    requests:
      # @schema
      # required: false
      # type: string
      # @schema
      # manager.resources.requests.cpu -- controller-manager CPU request (Min)
      cpu: 100m
      # @schema
      # required: false
      # type: string
      # @schema
      # manager.resources.requests.memory -- controller-manager Memory request (Min)
      memory: 50Mi

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # manager.containerSecurityContext -- A security context defines privileges and access control settings for the container.
  containerSecurityContext: {}

  # @schema
  # additionalProperties: true
  # required: false
  # type: object
  # @schema
  # manager.podSecurityContext -- A security context defines privileges and access control settings for a pod.
  podSecurityContext: {}
